{"ast":null,"code":"export function matchPasswordsValidator(passwordControlName, rePasswordControlName) {\n  return control => {\n    const passFormControl = control.get(passwordControlName);\n    const rePassFormControl = control.get(rePasswordControlName);\n    console.log({\n      passFormControl,\n      passSecondControl\n    });\n    const areMatching = passFirstControl?.value == passSecondControl?.value;\n    return areMatching ? null : {\n      matchPasswordsValidator: true\n    };\n  };\n}","map":{"version":3,"names":["matchPasswordsValidator","passwordControlName","rePasswordControlName","control","passFormControl","get","rePassFormControl","console","log","passSecondControl","areMatching","passFirstControl","value"],"sources":["D:\\Angular-Feb-2024-Workshop\\08.WorkshopDirectivesAndForms\\workshop-modules\\src\\app\\shared\\utils\\match-passwords-validator.ts"],"sourcesContent":["import { ValidatorFn } from \"@angular/forms\";\r\n\r\n\r\nexport function matchPasswordsValidator(passwordControlName: string, rePasswordControlName: string): ValidatorFn {\r\n\r\n    return (control) => {\r\n\r\n        const passFormControl = control.get(passwordControlName);\r\n        const rePassFormControl = control.get(rePasswordControlName);\r\n\r\n        console.log({ passFormControl, passSecondControl });\r\n        const areMatching = passFirstControl?.value == passSecondControl?.value;\r\n\r\n        return areMatching ? null : { matchPasswordsValidator: true };\r\n    };\r\n\r\n}"],"mappings":"AAGA,OAAM,SAAUA,uBAAuBA,CAACC,mBAA2B,EAAEC,qBAA6B;EAE9F,OAAQC,OAAO,IAAI;IAEf,MAAMC,eAAe,GAAGD,OAAO,CAACE,GAAG,CAACJ,mBAAmB,CAAC;IACxD,MAAMK,iBAAiB,GAAGH,OAAO,CAACE,GAAG,CAACH,qBAAqB,CAAC;IAE5DK,OAAO,CAACC,GAAG,CAAC;MAAEJ,eAAe;MAAEK;IAAiB,CAAE,CAAC;IACnD,MAAMC,WAAW,GAAGC,gBAAgB,EAAEC,KAAK,IAAIH,iBAAiB,EAAEG,KAAK;IAEvE,OAAOF,WAAW,GAAG,IAAI,GAAG;MAAEV,uBAAuB,EAAE;IAAI,CAAE;EACjE,CAAC;AAEL"},"metadata":{},"sourceType":"module","externalDependencies":[]}