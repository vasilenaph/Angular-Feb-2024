{"ast":null,"code":"import { HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { catchError } from \"rxjs\";\nimport { environment } from \"src/environments/environment.development\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./core/error/error.service\";\nimport * as i2 from \"@angular/router\";\nconst {\n  apiUrl\n} = environment;\nclass AppInterceptor {\n  constructor(errorService, router) {\n    this.errorService = errorService;\n    this.router = router;\n    this.API = '/api';\n  }\n  intercept(req, next) {\n    if (req.url.startsWith(this.API)) {\n      req = req.clone({\n        url: req.url.replace(this.API, apiUrl),\n        withCredentials: true\n      });\n    }\n    return next.handle(req).pipe(catchError(err => {\n      if (err.status === 401) {\n        this.router.navigate(['/auth/login']);\n      } else {\n        this.errorService.setError(err);\n        this.router.navigate(['/error']);\n      }\n      return [err];\n    }));\n  }\n  static #_ = this.ɵfac = function AppInterceptor_Factory(t) {\n    return new (t || AppInterceptor)(i0.ɵɵinject(i1.ErrorService), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AppInterceptor,\n    factory: AppInterceptor.ɵfac\n  });\n}\nexport const AppInterceptorProvider = {\n  useClass: AppInterceptor,\n  multi: true,\n  provide: HTTP_INTERCEPTORS\n};","map":{"version":3,"names":["HTTP_INTERCEPTORS","catchError","environment","apiUrl","AppInterceptor","constructor","errorService","router","API","intercept","req","next","url","startsWith","clone","replace","withCredentials","handle","pipe","err","status","navigate","setError","_","i0","ɵɵinject","i1","ErrorService","i2","Router","_2","factory","ɵfac","AppInterceptorProvider","useClass","multi","provide"],"sources":["D:\\Angular-Feb-2024-Workshop\\10.WorkshopPipesInterceptorsSubjects\\workshop-interceptors\\src\\app\\app.interceptor.ts"],"sourcesContent":["import { HTTP_INTERCEPTORS, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable, Provider } from \"@angular/core\";\r\nimport { Observable, catchError } from \"rxjs\";\r\nimport { environment } from \"src/environments/environment.development\";\r\nimport { ErrorService } from \"./core/error/error.service\";\r\nimport { Router } from \"@angular/router\";\r\n\r\nconst { apiUrl } = environment;\r\n\r\n@Injectable()\r\nclass AppInterceptor implements HttpInterceptor {\r\n\r\n    API = '/api';\r\n\r\n    constructor(private errorService: ErrorService, private router: Router) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        if (req.url.startsWith(this.API)) {\r\n            req = req.clone({\r\n                url: req.url.replace(this.API, apiUrl),\r\n                withCredentials: true,\r\n            })\r\n        }\r\n\r\n\r\n        return next.handle(req).pipe(\r\n            catchError((err => {\r\n                \r\n                if(err.status === 401) {\r\n                    this.router.navigate(['/auth/login']);\r\n                } else {\r\n                    this.errorService.setError(err);\r\n                    this.router.navigate(['/error'])\r\n                }\r\n\r\n                return [err];\r\n            })\r\n            ));\r\n    }\r\n}\r\n\r\nexport const AppInterceptorProvider: Provider = {\r\n    useClass: AppInterceptor,\r\n    multi: true,\r\n    provide: HTTP_INTERCEPTORS,\r\n}"],"mappings":"AAAA,SAASA,iBAAiB,QAA8D,sBAAsB;AAE9G,SAAqBC,UAAU,QAAQ,MAAM;AAC7C,SAASC,WAAW,QAAQ,0CAA0C;;;;AAItE,MAAM;EAAEC;AAAM,CAAE,GAAGD,WAAW;AAE9B,MACME,cAAc;EAIhBC,YAAoBC,YAA0B,EAAUC,MAAc;IAAlD,KAAAD,YAAY,GAAZA,YAAY;IAAwB,KAAAC,MAAM,GAANA,MAAM;IAF9D,KAAAC,GAAG,GAAG,MAAM;EAE8D;EAE1EC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAE9C,IAAID,GAAG,CAACE,GAAG,CAACC,UAAU,CAAC,IAAI,CAACL,GAAG,CAAC,EAAE;MAC9BE,GAAG,GAAGA,GAAG,CAACI,KAAK,CAAC;QACZF,GAAG,EAAEF,GAAG,CAACE,GAAG,CAACG,OAAO,CAAC,IAAI,CAACP,GAAG,EAAEL,MAAM,CAAC;QACtCa,eAAe,EAAE;OACpB,CAAC;;IAIN,OAAOL,IAAI,CAACM,MAAM,CAACP,GAAG,CAAC,CAACQ,IAAI,CACxBjB,UAAU,CAAEkB,GAAG,IAAG;MAEd,IAAGA,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;QACnB,IAAI,CAACb,MAAM,CAACc,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;OACxC,MAAM;QACH,IAAI,CAACf,YAAY,CAACgB,QAAQ,CAACH,GAAG,CAAC;QAC/B,IAAI,CAACZ,MAAM,CAACc,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;;MAGpC,OAAO,CAACF,GAAG,CAAC;IAChB,CAAE,CACD,CAAC;EACV;EAAC,QAAAI,CAAA,G;qBA7BCnB,cAAc,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,YAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAd1B,cAAc;IAAA2B,OAAA,EAAd3B,cAAc,CAAA4B;EAAA;;AAgCpB,OAAO,MAAMC,sBAAsB,GAAa;EAC5CC,QAAQ,EAAE9B,cAAc;EACxB+B,KAAK,EAAE,IAAI;EACXC,OAAO,EAAEpC;CACZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}