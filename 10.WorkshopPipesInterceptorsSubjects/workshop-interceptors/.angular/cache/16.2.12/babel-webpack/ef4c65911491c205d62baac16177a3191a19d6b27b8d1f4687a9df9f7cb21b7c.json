{"ast":null,"code":"import { NG_VALIDATORS } from '@angular/forms';\nimport { emailValidator } from '../utils/email-validator';\nimport * as i0 from \"@angular/core\";\nexport class EmailDirective {\n  // validator: ValidatorFn = () => null;\n  constructor() {\n    this.appEmail = [];\n  }\n  validate(control) {\n    console.log('validate', control.value);\n    console.log('domains', this.appEmail);\n    const validatorFn = emailValidator(this.appEmail);\n    const result = validatorFn(contro);\n    console.log({\n      result\n    });\n    return null;\n  }\n  static #_ = this.ɵfac = function EmailDirective_Factory(t) {\n    return new (t || EmailDirective)();\n  };\n  static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: EmailDirective,\n    selectors: [[\"\", \"appEmail\", \"\"]],\n    inputs: {\n      appEmail: \"appEmail\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALIDATORS,\n      useExisting: EmailDirective,\n      multi: true\n    }])]\n  });\n}","map":{"version":3,"names":["NG_VALIDATORS","emailValidator","EmailDirective","constructor","appEmail","validate","control","console","log","value","validatorFn","result","contro","_","_2","selectors","inputs","features","i0","ɵɵProvidersFeature","provide","useExisting","multi"],"sources":["D:\\Angular-Feb-2024-Workshop\\08.WorkshopDirectivesAndForms\\workshop-modules\\src\\app\\shared\\validators\\email.directive.ts"],"sourcesContent":["import { Directive, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, ValidatorFn } from '@angular/forms';\nimport { emailValidator } from '../utils/email-validator';\n\n@Directive({\n  selector: '[appEmail]',\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      useExisting: EmailDirective,\n      multi: true\n    }\n  ]\n})\nexport class EmailDirective implements Validator {\n  @Input() appEmail: string[] = [];\n\n  // validator: ValidatorFn = () => null;\n\n  constructor() { }\n\n  validate(control: AbstractControl<any, any>): ValidationErrors | null {\n    console.log('validate', control.value);\n    console.log('domains', this.appEmail);\n\n    const validatorFn = emailValidator(this.appEmail);\n    const result = validatorFn(contro)\n    console.log({ result })\n\n    return null;\n  }\n}\n"],"mappings":"AACA,SAA0BA,aAAa,QAAkD,gBAAgB;AACzG,SAASC,cAAc,QAAQ,0BAA0B;;AAYzD,OAAM,MAAOC,cAAc;EAGzB;EAEAC,YAAA;IAJS,KAAAC,QAAQ,GAAa,EAAE;EAIhB;EAEhBC,QAAQA,CAACC,OAAkC;IACzCC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,OAAO,CAACG,KAAK,CAAC;IACtCF,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,IAAI,CAACJ,QAAQ,CAAC;IAErC,MAAMM,WAAW,GAAGT,cAAc,CAAC,IAAI,CAACG,QAAQ,CAAC;IACjD,MAAMO,MAAM,GAAGD,WAAW,CAACE,MAAM,CAAC;IAClCL,OAAO,CAACC,GAAG,CAAC;MAAEG;IAAM,CAAE,CAAC;IAEvB,OAAO,IAAI;EACb;EAAC,QAAAE,CAAA,G;qBAhBUX,cAAc;EAAA;EAAA,QAAAY,EAAA,G;UAAdZ,cAAc;IAAAa,SAAA;IAAAC,MAAA;MAAAZ,QAAA;IAAA;IAAAa,QAAA,GAAAC,EAAA,CAAAC,kBAAA,CARd,CACT;MACEC,OAAO,EAAEpB,aAAa;MACtBqB,WAAW,EAAEnB,cAAc;MAC3BoB,KAAK,EAAE;KACR,CACF;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}