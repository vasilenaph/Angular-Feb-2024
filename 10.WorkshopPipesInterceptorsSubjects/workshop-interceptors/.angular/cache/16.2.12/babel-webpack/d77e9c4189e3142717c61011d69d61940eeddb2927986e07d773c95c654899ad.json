{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { EMAIL_DOMAINS } from 'src/app/constants';\nimport { emailValidator } from 'src/app/shared/utils/email-validator';\nimport { matchPasswordsValidator } from 'src/app/shared/utils/match-passwords-validator';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../user.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction RegisterComponent_ng_container_10_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 25);\n    i0.ɵɵtext(1, \" Username is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_ng_container_10_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 25);\n    i0.ɵɵtext(1, \" Username must be at least 5 characters! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, RegisterComponent_ng_container_10_p_1_Template, 2, 0, \"p\", 24);\n    i0.ɵɵtemplate(2, RegisterComponent_ng_container_10_p_2_Template, 2, 0, \"p\", 24);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r0.form.get(\"username\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r0.form.get(\"username\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"minlength\"]);\n  }\n}\nfunction RegisterComponent_ng_container_16_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 25);\n    i0.ɵɵtext(1, \" Email is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_ng_container_16_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 25);\n    i0.ɵɵtext(1, \" Email is not valid! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_ng_container_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, RegisterComponent_ng_container_16_p_1_Template, 2, 0, \"p\", 24);\n    i0.ɵɵtemplate(2, RegisterComponent_ng_container_16_p_2_Template, 2, 0, \"p\", 24);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r1.form.get(\"email\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r1.form.get(\"email\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"emailValidator\"]);\n  }\n}\nfunction RegisterComponent_ng_container_36_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 25);\n    i0.ɵɵtext(1, \"Repeat Password does not match password!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_ng_container_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, RegisterComponent_ng_container_36_p_1_Template, 2, 0, \"p\", 24);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r2.PassGroup == null ? null : ctx_r2.PassGroup.errors == null ? null : ctx_r2.PassGroup.errors[\"matchPasswordsValidator\"]) || (ctx_r2.PassGroup == null ? null : (tmp_0_0 = ctx_r2.PassGroup.get(\"rePassword\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]));\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    backgroundColor: a0\n  };\n};\nexport class RegisterComponent {\n  get PassGroup() {\n    return this.form.get('passGroup');\n  }\n  constructor(fb, userService, router) {\n    this.fb = fb;\n    this.userService = userService;\n    this.router = router;\n    this.form = this.fb.group({\n      username: ['', [Validators.required, Validators.minLength(5)]],\n      email: ['', [Validators.required, emailValidator(EMAIL_DOMAINS)]],\n      tel: ['123123'],\n      passGroup: this.fb.group({\n        password: ['', [Validators.required]],\n        rePassword: ['', [Validators.required]]\n      }, {\n        validators: [matchPasswordsValidator('password', 'rePassword')]\n      })\n    });\n  }\n  register() {\n    if (this.form.invalid) {\n      return;\n    }\n    const {\n      username,\n      email,\n      tel,\n      passGroup: {\n        password,\n        rePassword\n      } = {}\n    } = this.form.value;\n    this.userService.register(username, email, tel, password, rePassword).subscribe(() => {\n      thisr;\n    });\n    console.log(this.form.value);\n  }\n  static #_ = this.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 43,\n    vars: 9,\n    consts: [[1, \"container\"], [1, \"register\", 3, \"formGroup\", \"ngSubmit\"], [1, \"field\", \"field-icon\"], [\"for\", \"username\"], [1, \"fas\", \"fa-user\"], [\"type\", \"text\", \"name\", \"username\", \"id\", \"username\", \"placeholder\", \"Johny\", \"formControlName\", \"username\", 1, \"input-error\"], [4, \"ngIf\"], [\"for\", \"email\"], [1, \"fas\", \"fa-envelope\"], [\"type\", \"email\", \"name\", \"email\", \"id\", \"email\", \"placeholder\", \"john.doe@gmail.com\", \"formControlName\", \"email\"], [\"for\", \"tel\"], [1, \"fas\", \"fa-phone\"], [\"name\", \"select-tel\", \"id\", \"select-tel\", 1, \"tel\"], [\"value\", \"00359\"], [\"type\", \"text\", \"name\", \"tel\", \"id\", \"tel\", \"placeholder\", \"885 888 888\", \"formControlName\", \"tel\"], [\"formGroupName\", \"passGroup\"], [\"for\", \"password\"], [1, \"fas\", \"fa-lock\"], [\"type\", \"password\", \"name\", \"password\", \"id\", \"password\", \"placeholder\", \"******\", \"formControlName\", \"password\"], [\"for\", \"rePassword\"], [\"type\", \"password\", \"name\", \"rePassword\", \"id\", \"rePassword\", \"placeholder\", \"******\", \"formControlName\", \"rePassword\"], [3, \"disabled\"], [1, \"text-center\"], [\"routerLink\", \"/login\"], [\"class\", \"error\", 4, \"ngIf\"], [1, \"error\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.register();\n        });\n        i0.ɵɵelementStart(2, \"fieldset\")(3, \"h2\");\n        i0.ɵɵtext(4, \"Registration Form\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"p\", 2)(6, \"label\", 3)(7, \"span\");\n        i0.ɵɵelement(8, \"i\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(9, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(10, RegisterComponent_ng_container_10_Template, 3, 2, \"ng-container\", 6);\n        i0.ɵɵelementStart(11, \"p\", 2)(12, \"label\", 7)(13, \"span\");\n        i0.ɵɵelement(14, \"i\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(15, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(16, RegisterComponent_ng_container_16_Template, 3, 2, \"ng-container\", 6);\n        i0.ɵɵelementStart(17, \"p\", 2)(18, \"label\", 10)(19, \"span\");\n        i0.ɵɵelement(20, \"i\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"select\", 12)(22, \"option\", 13);\n        i0.ɵɵtext(23, \"+359\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(24, \"input\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementContainerStart(25, 15);\n        i0.ɵɵelementStart(26, \"p\", 2)(27, \"label\", 16)(28, \"span\");\n        i0.ɵɵelement(29, \"i\", 17);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(30, \"input\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"p\", 2)(32, \"label\", 19)(33, \"span\");\n        i0.ɵɵelement(34, \"i\", 17);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(35, \"input\", 20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(36, RegisterComponent_ng_container_36_Template, 2, 1, \"ng-container\", 6);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementStart(37, \"button\", 21);\n        i0.ɵɵtext(38, \"Create Account\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"p\", 22);\n        i0.ɵɵtext(40, \" Have an account? \");\n        i0.ɵɵelementStart(41, \"a\", 23);\n        i0.ɵɵtext(42, \"Log In\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        let tmp_2_0;\n        let tmp_3_0;\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx.form.get(\"username\")) == null ? null : tmp_1_0.touched);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx.form.get(\"email\")) == null ? null : tmp_2_0.touched);\n        i0.ɵɵadvance(20);\n        i0.ɵɵproperty(\"ngIf\", ctx.PassGroup == null ? null : (tmp_3_0 = ctx.PassGroup.get(\"rePassword\")) == null ? null : tmp_3_0.touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction1(7, _c0, ctx.form.invalid ? \"grey\" : \"blue\"));\n        i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n      }\n    },\n    dependencies: [i4.NgIf, i3.RouterLink, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName],\n    styles: [\"\\n\\n\\nform.login[_ngcontent-%COMP%], form.register[_ngcontent-%COMP%] {\\n    width: 40%;\\n    margin: 2em auto 0;\\n    text-align: center;\\n}\\n\\n.login[_ngcontent-%COMP%]   fieldset[_ngcontent-%COMP%], .register[_ngcontent-%COMP%]   fieldset[_ngcontent-%COMP%] {\\n    border-radius: 0.3em;\\n    padding: 0.8em;\\n    background-color: #ffffff;\\n}\\n\\n.login[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%], .register[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n    padding-top: 0;\\n    border-bottom: none;\\n}\\n\\n.login[_ngcontent-%COMP%]   p[_ngcontent-%COMP%], .register[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n    padding-bottom: 0;\\n    padding-top: 1.5rem;\\n}\\n\\n.login[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], .register[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n    flex: 0 1 100%;\\n    border: 1px solid;\\n    padding: 0.3em;\\n    border-left: 0.3em solid green;\\n    border-top-right-radius: 0.3em;\\n    border-bottom-right-radius: 0.3em;\\n}\\n\\n.login[_ngcontent-%COMP%]   select[_ngcontent-%COMP%], .register[_ngcontent-%COMP%]   select[_ngcontent-%COMP%] {\\n    border-color: black;\\n}\\n\\n.login[_ngcontent-%COMP%]   button[_ngcontent-%COMP%], .register[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n    color: white;\\n    border: none;\\n    border-radius: 0.3em;\\n    padding: 0.6em 1.2em;\\n    margin-top: 1.5rem;\\n    width: 60%;\\n    outline: none;\\n}\\n\\n.login[_ngcontent-%COMP%]   i[_ngcontent-%COMP%], .register[_ngcontent-%COMP%]   i[_ngcontent-%COMP%] {\\n    border: 1px solid;\\n    border-right: none;\\n    padding: 0.55em;\\n    border-top-left-radius: 0.3em;\\n    border-bottom-left-radius: 0.3em;\\n    background-color: #e9ecef;\\n}\\n\\n.login[_ngcontent-%COMP%]   a[_ngcontent-%COMP%], .register[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n    color: #007bff;\\n}\\n\\n.login[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover, .register[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover {\\n    cursor: pointer;\\n}\\n\\n.register[_ngcontent-%COMP%]   .tel[_ngcontent-%COMP%] {\\n    padding-right: 0.8em;\\n}\\n\\n.login[_ngcontent-%COMP%]   .field[_ngcontent-%COMP%], .register[_ngcontent-%COMP%]   .field[_ngcontent-%COMP%] {\\n    display: flex;\\n    padding-bottom: 0;\\n}\\n\\n\\n\\n\\np.error[_ngcontent-%COMP%] {\\n    text-align: left;\\n    border-radius: 0.3em;\\n    color: red;\\n    padding-top: 0;\\n}\\n\\n.input-error[_ngcontent-%COMP%] {\\n    border-left-color: red;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdXNlci9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHlCQUF5Qjs7QUFFekI7SUFDSSxVQUFVO0lBQ1Ysa0JBQWtCO0lBQ2xCLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLG9CQUFvQjtJQUNwQixjQUFjO0lBQ2QseUJBQXlCO0FBQzdCOztBQUVBO0lBQ0ksY0FBYztJQUNkLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsaUJBQWlCO0lBQ2pCLGNBQWM7SUFDZCw4QkFBOEI7SUFDOUIsOEJBQThCO0lBQzlCLGlDQUFpQztBQUNyQzs7QUFFQTtJQUNJLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLFlBQVk7SUFDWixZQUFZO0lBQ1osb0JBQW9CO0lBQ3BCLG9CQUFvQjtJQUNwQixrQkFBa0I7SUFDbEIsVUFBVTtJQUNWLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZiw2QkFBNkI7SUFDN0IsZ0NBQWdDO0lBQ2hDLHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxlQUFlO0FBQ25COztBQUVBO0lBQ0ksb0JBQW9CO0FBQ3hCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLGlCQUFpQjtBQUNyQjs7QUFFQSxZQUFZOztBQUVaO0lBQ0ksZ0JBQWdCO0lBQ2hCLG9CQUFvQjtJQUNwQixVQUFVO0lBQ1YsY0FBYztBQUNsQjs7QUFFQTtJQUNJLHNCQUFzQjtBQUMxQiIsInNvdXJjZXNDb250ZW50IjpbIi8qbG9naW4gcmVnaXN0ZXIgZm9ybXMgICovXHJcblxyXG5mb3JtLmxvZ2luLCBmb3JtLnJlZ2lzdGVyIHtcclxuICAgIHdpZHRoOiA0MCU7XHJcbiAgICBtYXJnaW46IDJlbSBhdXRvIDA7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5sb2dpbiBmaWVsZHNldCwgLnJlZ2lzdGVyIGZpZWxkc2V0IHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDAuM2VtO1xyXG4gICAgcGFkZGluZzogMC44ZW07XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xyXG59XHJcblxyXG4ubG9naW4gaDIsIC5yZWdpc3RlciBoMiB7XHJcbiAgICBwYWRkaW5nLXRvcDogMDtcclxuICAgIGJvcmRlci1ib3R0b206IG5vbmU7XHJcbn1cclxuXHJcbi5sb2dpbiBwLCAucmVnaXN0ZXIgcCB7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMDtcclxuICAgIHBhZGRpbmctdG9wOiAxLjVyZW07XHJcbn1cclxuXHJcbi5sb2dpbiBpbnB1dCwgLnJlZ2lzdGVyIGlucHV0IHtcclxuICAgIGZsZXg6IDAgMSAxMDAlO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQ7XHJcbiAgICBwYWRkaW5nOiAwLjNlbTtcclxuICAgIGJvcmRlci1sZWZ0OiAwLjNlbSBzb2xpZCBncmVlbjtcclxuICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAwLjNlbTtcclxuICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAwLjNlbTtcclxufVxyXG5cclxuLmxvZ2luIHNlbGVjdCwgLnJlZ2lzdGVyIHNlbGVjdCB7XHJcbiAgICBib3JkZXItY29sb3I6IGJsYWNrO1xyXG59XHJcblxyXG4ubG9naW4gYnV0dG9uLCAucmVnaXN0ZXIgYnV0dG9uIHtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDAuM2VtO1xyXG4gICAgcGFkZGluZzogMC42ZW0gMS4yZW07XHJcbiAgICBtYXJnaW4tdG9wOiAxLjVyZW07XHJcbiAgICB3aWR0aDogNjAlO1xyXG4gICAgb3V0bGluZTogbm9uZTtcclxufVxyXG5cclxuLmxvZ2luIGksIC5yZWdpc3RlciBpIHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkO1xyXG4gICAgYm9yZGVyLXJpZ2h0OiBub25lO1xyXG4gICAgcGFkZGluZzogMC41NWVtO1xyXG4gICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMC4zZW07XHJcbiAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAwLjNlbTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlOWVjZWY7XHJcbn1cclxuXHJcbi5sb2dpbiBhLCAucmVnaXN0ZXIgYSB7XHJcbiAgICBjb2xvcjogIzAwN2JmZjtcclxufVxyXG5cclxuLmxvZ2luIGE6aG92ZXIsIC5yZWdpc3RlciBhOmhvdmVyIHtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLnJlZ2lzdGVyIC50ZWwge1xyXG4gICAgcGFkZGluZy1yaWdodDogMC44ZW07XHJcbn1cclxuXHJcbi5sb2dpbiAuZmllbGQsIC5yZWdpc3RlciAuZmllbGQge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIHBhZGRpbmctYm90dG9tOiAwO1xyXG59XHJcblxyXG4vKiBlcnJvcnMgICovXHJcblxyXG5wLmVycm9yIHtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICBib3JkZXItcmFkaXVzOiAwLjNlbTtcclxuICAgIGNvbG9yOiByZWQ7XHJcbiAgICBwYWRkaW5nLXRvcDogMDtcclxufVxyXG5cclxuLmlucHV0LWVycm9yIHtcclxuICAgIGJvcmRlci1sZWZ0LWNvbG9yOiByZWQ7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["Validators","EMAIL_DOMAINS","emailValidator","matchPasswordsValidator","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelementContainerStart","ɵɵtemplate","RegisterComponent_ng_container_10_p_1_Template","RegisterComponent_ng_container_10_p_2_Template","ɵɵelementContainerEnd","ɵɵadvance","ɵɵproperty","tmp_0_0","ctx_r0","form","get","errors","tmp_1_0","RegisterComponent_ng_container_16_p_1_Template","RegisterComponent_ng_container_16_p_2_Template","ctx_r1","RegisterComponent_ng_container_36_p_1_Template","ctx_r2","PassGroup","RegisterComponent","constructor","fb","userService","router","group","username","required","minLength","email","tel","passGroup","password","rePassword","validators","register","invalid","value","subscribe","thisr","console","log","_","ɵɵdirectiveInject","i1","FormBuilder","i2","UserService","i3","Router","_2","selectors","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵlistener","RegisterComponent_Template_form_ngSubmit_1_listener","ɵɵelement","RegisterComponent_ng_container_10_Template","RegisterComponent_ng_container_16_Template","RegisterComponent_ng_container_36_Template","touched","tmp_2_0","tmp_3_0","ɵɵstyleMap","ɵɵpureFunction1","_c0"],"sources":["D:\\Angular-Feb-2024-Workshop\\10.WorkshopPipesInterceptorsSubjects\\workshop-interceptors\\src\\app\\user\\register\\register.component.ts","D:\\Angular-Feb-2024-Workshop\\10.WorkshopPipesInterceptorsSubjects\\workshop-interceptors\\src\\app\\user\\register\\register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { EMAIL_DOMAINS } from 'src/app/constants';\r\nimport { emailValidator } from 'src/app/shared/utils/email-validator';\r\nimport { matchPasswordsValidator } from 'src/app/shared/utils/match-passwords-validator';\r\nimport { UserService } from '../user.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent {\r\n\r\n  form = this.fb.group({\r\n    username: ['', [Validators.required, Validators.minLength(5)]],\r\n    email: ['', [Validators.required, emailValidator(EMAIL_DOMAINS)]],\r\n    tel: ['123123'],\r\n    passGroup: this.fb.group(\r\n      {\r\n        password: ['', [Validators.required]],\r\n        rePassword: ['', [Validators.required]],\r\n      },\r\n      {\r\n        validators: [matchPasswordsValidator('password', 'rePassword')],\r\n      }\r\n    ),\r\n  });\r\n\r\n  get PassGroup() {\r\n    return this.form.get('passGroup');\r\n  }\r\n\r\n  constructor(private fb: FormBuilder, private userService: UserService, private router: Router) { }\r\n\r\n  register(): void {\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    const { username, email, tel, passGroup: {password, rePassword} = {} } = this.form.value;\r\n\r\n    this.userService.register(username!, email!, tel!, password!, rePassword!).subscribe(() => {\r\n      thisr\r\n    });\r\n\r\n    console.log(this.form.value);\r\n  }\r\n}\r\n","<!-- homepage -->\r\n<div class=\"container\">\r\n    <form class=\"register\" [formGroup]=\"form\" (ngSubmit)=\"register()\">\r\n\r\n        <fieldset>\r\n            <h2>Registration Form</h2>\r\n\r\n            <!-- username -->\r\n            <p class=\"field field-icon\">\r\n                <label for=\"username\"><span><i class=\"fas fa-user\"></i></span></label>\r\n                <input class=\"input-error\" type=\"text\" name=\"username\" id=\"username\" placeholder=\"Johny\"\r\n                    formControlName=\"username\">\r\n            </p>\r\n\r\n            <ng-container *ngIf=\"form.get('username')?.touched\">\r\n                <p class=\"error\" *ngIf=\"form.get('username')?.errors?.['required']\">\r\n                    Username is required!\r\n                </p>\r\n\r\n                <p class=\"error\" *ngIf=\"form.get('username')?.errors?.['minlength']\">\r\n                    Username must be at least 5 characters!\r\n                </p>\r\n            </ng-container>\r\n\r\n            <!-- email -->\r\n            <p class=\"field field-icon\">\r\n                <label for=\"email\"><span><i class=\"fas fa-envelope\"></i></span></label>\r\n                <input type=\"email\" name=\"email\" id=\"email\" placeholder=\"john.doe@gmail.com\" formControlName=\"email\">\r\n            </p>\r\n            <ng-container *ngIf=\"form.get('email')?.touched\">\r\n                <p class=\"error\" *ngIf=\"form.get('email')?.errors?.['required']\">\r\n                    Email is required!\r\n                </p>\r\n                <p class=\"error\" *ngIf=\"form.get('email')?.errors?.['emailValidator']\">\r\n                    Email is not valid!\r\n                </p>\r\n            </ng-container>\r\n\r\n            <!-- telephone -->\r\n            <p class=\"field field-icon\">\r\n                <label for=\"tel\"><span><i class=\"fas fa-phone\"></i></span></label>\r\n                <select name=\"select-tel\" id=\"select-tel\" class=\"tel\">\r\n                    <option value=\"00359\">+359</option>\r\n                </select>\r\n                <input type=\"text\" name=\"tel\" id=\"tel\" placeholder=\"885 888 888\" formControlName=\"tel\">\r\n            </p>\r\n\r\n            <ng-container formGroupName=\"passGroup\">\r\n                <!-- password -->\r\n                <p class=\"field field-icon\">\r\n                    <label for=\"password\"><span><i class=\"fas fa-lock\"></i></span></label>\r\n                    <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"******\"\r\n                        formControlName=\"password\">\r\n                </p>\r\n                <!-- <p class=\"error\">\r\n                Password is required!\r\n            </p>\r\n            <p class=\"error\">\r\n                Password must be at least 4 characters!\r\n            </p> -->\r\n\r\n                <!-- rePassword -->\r\n                <p class=\"field field-icon\">\r\n                    <label for=\"rePassword\"><span><i class=\"fas fa-lock\"></i></span></label>\r\n                    <input type=\"password\" name=\"rePassword\" id=\"rePassword\" placeholder=\"******\"\r\n                        formControlName=\"rePassword\">\r\n                </p>\r\n                <ng-container *ngIf=\"PassGroup?.get('rePassword')?.touched\">\r\n                    <p class=\"error\"\r\n                    *ngIf=\"PassGroup?.errors?.['matchPasswordsValidator'] ||\r\n                    PassGroup?.get('rePassword')?.errors?.['required']\r\n                    \"\r\n                    >Repeat Password does not match password!</p>\r\n                </ng-container>\r\n            </ng-container>\r\n\r\n            <button \r\n            [disabled]=\"form.invalid\"\r\n            [style]=\"{backgroundColor: form.invalid ? 'grey' : 'blue'}\"\r\n            >Create Account</button>\r\n\r\n            <p class=\"text-center\">\r\n                Have an account?\r\n                <a routerLink=\"/login\">Log In</a>\r\n            </p>\r\n\r\n        </fieldset>\r\n    </form>\r\n</div>"],"mappings":"AACA,SAAsBA,UAAU,QAAQ,gBAAgB;AACxD,SAASC,aAAa,QAAQ,mBAAmB;AACjD,SAASC,cAAc,QAAQ,sCAAsC;AACrE,SAASC,uBAAuB,QAAQ,gDAAgD;;;;;;;;ICWxEC,EAAA,CAAAC,cAAA,YAAoE;IAChED,EAAA,CAAAE,MAAA,8BACJ;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;;IAEJH,EAAA,CAAAC,cAAA,YAAqE;IACjED,EAAA,CAAAE,MAAA,gDACJ;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;;IAPRH,EAAA,CAAAI,uBAAA,GAAoD;IAChDJ,EAAA,CAAAK,UAAA,IAAAC,8CAAA,gBAEI;IAEJN,EAAA,CAAAK,UAAA,IAAAE,8CAAA,gBAEI;IACRP,EAAA,CAAAQ,qBAAA,EAAe;;;;;;IAPOR,EAAA,CAAAS,SAAA,GAAgD;IAAhDT,EAAA,CAAAU,UAAA,UAAAC,OAAA,GAAAC,MAAA,CAAAC,IAAA,CAAAC,GAAA,+BAAAH,OAAA,CAAAI,MAAA,kBAAAJ,OAAA,CAAAI,MAAA,aAAgD;IAIhDf,EAAA,CAAAS,SAAA,GAAiD;IAAjDT,EAAA,CAAAU,UAAA,UAAAM,OAAA,GAAAJ,MAAA,CAAAC,IAAA,CAAAC,GAAA,+BAAAE,OAAA,CAAAD,MAAA,kBAAAC,OAAA,CAAAD,MAAA,cAAiD;;;;;IAWnEf,EAAA,CAAAC,cAAA,YAAiE;IAC7DD,EAAA,CAAAE,MAAA,2BACJ;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;;IACJH,EAAA,CAAAC,cAAA,YAAuE;IACnED,EAAA,CAAAE,MAAA,4BACJ;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;;IANRH,EAAA,CAAAI,uBAAA,GAAiD;IAC7CJ,EAAA,CAAAK,UAAA,IAAAY,8CAAA,gBAEI;IACJjB,EAAA,CAAAK,UAAA,IAAAa,8CAAA,gBAEI;IACRlB,EAAA,CAAAQ,qBAAA,EAAe;;;;;;IANOR,EAAA,CAAAS,SAAA,GAA6C;IAA7CT,EAAA,CAAAU,UAAA,UAAAC,OAAA,GAAAQ,MAAA,CAAAN,IAAA,CAAAC,GAAA,4BAAAH,OAAA,CAAAI,MAAA,kBAAAJ,OAAA,CAAAI,MAAA,aAA6C;IAG7Cf,EAAA,CAAAS,SAAA,GAAmD;IAAnDT,EAAA,CAAAU,UAAA,UAAAM,OAAA,GAAAG,MAAA,CAAAN,IAAA,CAAAC,GAAA,4BAAAE,OAAA,CAAAD,MAAA,kBAAAC,OAAA,CAAAD,MAAA,mBAAmD;;;;;IAmCjEf,EAAA,CAAAC,cAAA,YAIC;IAAAD,EAAA,CAAAE,MAAA,+CAAwC;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;;IALjDH,EAAA,CAAAI,uBAAA,GAA4D;IACxDJ,EAAA,CAAAK,UAAA,IAAAe,8CAAA,gBAI6C;IACjDpB,EAAA,CAAAQ,qBAAA,EAAe;;;;;IAJVR,EAAA,CAAAS,SAAA,GACgD;IADhDT,EAAA,CAAAU,UAAA,UAAAW,MAAA,CAAAC,SAAA,kBAAAD,MAAA,CAAAC,SAAA,CAAAP,MAAA,kBAAAM,MAAA,CAAAC,SAAA,CAAAP,MAAA,iCAAAM,MAAA,CAAAC,SAAA,mBAAAX,OAAA,GAAAU,MAAA,CAAAC,SAAA,CAAAR,GAAA,iCAAAH,OAAA,CAAAI,MAAA,kBAAAJ,OAAA,CAAAI,MAAA,cACgD;;;;;;;;ADzDrE,OAAM,MAAOQ,iBAAiB;EAiB5B,IAAID,SAASA,CAAA;IACX,OAAO,IAAI,CAACT,IAAI,CAACC,GAAG,CAAC,WAAW,CAAC;EACnC;EAEAU,YAAoBC,EAAe,EAAUC,WAAwB,EAAUC,MAAc;IAAzE,KAAAF,EAAE,GAAFA,EAAE;IAAuB,KAAAC,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAnBrF,KAAAd,IAAI,GAAG,IAAI,CAACY,EAAE,CAACG,KAAK,CAAC;MACnBC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACjC,UAAU,CAACkC,QAAQ,EAAElC,UAAU,CAACmC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9DC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACpC,UAAU,CAACkC,QAAQ,EAAEhC,cAAc,CAACD,aAAa,CAAC,CAAC,CAAC;MACjEoC,GAAG,EAAE,CAAC,QAAQ,CAAC;MACfC,SAAS,EAAE,IAAI,CAACT,EAAE,CAACG,KAAK,CACtB;QACEO,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACvC,UAAU,CAACkC,QAAQ,CAAC,CAAC;QACrCM,UAAU,EAAE,CAAC,EAAE,EAAE,CAACxC,UAAU,CAACkC,QAAQ,CAAC;OACvC,EACD;QACEO,UAAU,EAAE,CAACtC,uBAAuB,CAAC,UAAU,EAAE,YAAY,CAAC;OAC/D;KAEJ,CAAC;EAM+F;EAEjGuC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACzB,IAAI,CAAC0B,OAAO,EAAE;MACrB;;IAGF,MAAM;MAAEV,QAAQ;MAAEG,KAAK;MAAEC,GAAG;MAAEC,SAAS,EAAE;QAACC,QAAQ;QAAEC;MAAU,CAAC,GAAG;IAAE,CAAE,GAAG,IAAI,CAACvB,IAAI,CAAC2B,KAAK;IAExF,IAAI,CAACd,WAAW,CAACY,QAAQ,CAACT,QAAS,EAAEG,KAAM,EAAEC,GAAI,EAAEE,QAAS,EAAEC,UAAW,CAAC,CAACK,SAAS,CAAC,MAAK;MACxFC,KAAK;IACP,CAAC,CAAC;IAEFC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC/B,IAAI,CAAC2B,KAAK,CAAC;EAC9B;EAAC,QAAAK,CAAA,G;qBAnCUtB,iBAAiB,EAAAvB,EAAA,CAAA8C,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAhD,EAAA,CAAA8C,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAAlD,EAAA,CAAA8C,iBAAA,CAAAK,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAjB9B,iBAAiB;IAAA+B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCZ9B5D,EAAA,CAAAC,cAAA,aAAuB;QACuBD,EAAA,CAAA8D,UAAA,sBAAAC,oDAAA;UAAA,OAAYF,GAAA,CAAAvB,QAAA,EAAU;QAAA,EAAC;QAE7DtC,EAAA,CAAAC,cAAA,eAAU;QACFD,EAAA,CAAAE,MAAA,wBAAiB;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAG1BH,EAAA,CAAAC,cAAA,WAA4B;QACID,EAAA,CAAAgE,SAAA,WAA2B;QAAAhE,EAAA,CAAAG,YAAA,EAAO;QAC9DH,EAAA,CAAAgE,SAAA,eAC+B;QACnChE,EAAA,CAAAG,YAAA,EAAI;QAEJH,EAAA,CAAAK,UAAA,KAAA4D,0CAAA,0BAQe;QAGfjE,EAAA,CAAAC,cAAA,YAA4B;QACCD,EAAA,CAAAgE,SAAA,YAA+B;QAAAhE,EAAA,CAAAG,YAAA,EAAO;QAC/DH,EAAA,CAAAgE,SAAA,gBAAqG;QACzGhE,EAAA,CAAAG,YAAA,EAAI;QACJH,EAAA,CAAAK,UAAA,KAAA6D,0CAAA,0BAOe;QAGflE,EAAA,CAAAC,cAAA,YAA4B;QACDD,EAAA,CAAAgE,SAAA,aAA4B;QAAAhE,EAAA,CAAAG,YAAA,EAAO;QAC1DH,EAAA,CAAAC,cAAA,kBAAsD;QAC5BD,EAAA,CAAAE,MAAA,YAAI;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAEvCH,EAAA,CAAAgE,SAAA,iBAAuF;QAC3FhE,EAAA,CAAAG,YAAA,EAAI;QAEJH,EAAA,CAAAI,uBAAA,QAAwC;QAEpCJ,EAAA,CAAAC,cAAA,YAA4B;QACID,EAAA,CAAAgE,SAAA,aAA2B;QAAAhE,EAAA,CAAAG,YAAA,EAAO;QAC9DH,EAAA,CAAAgE,SAAA,iBAC+B;QACnChE,EAAA,CAAAG,YAAA,EAAI;QASJH,EAAA,CAAAC,cAAA,YAA4B;QACMD,EAAA,CAAAgE,SAAA,aAA2B;QAAAhE,EAAA,CAAAG,YAAA,EAAO;QAChEH,EAAA,CAAAgE,SAAA,iBACiC;QACrChE,EAAA,CAAAG,YAAA,EAAI;QACJH,EAAA,CAAAK,UAAA,KAAA8D,0CAAA,0BAMe;QACnBnE,EAAA,CAAAQ,qBAAA,EAAe;QAEfR,EAAA,CAAAC,cAAA,kBAGC;QAAAD,EAAA,CAAAE,MAAA,sBAAc;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAExBH,EAAA,CAAAC,cAAA,aAAuB;QACnBD,EAAA,CAAAE,MAAA,0BACA;QAAAF,EAAA,CAAAC,cAAA,aAAuB;QAAAD,EAAA,CAAAE,MAAA,cAAM;QAAAF,EAAA,CAAAG,YAAA,EAAI;;;;;;QAjFtBH,EAAA,CAAAS,SAAA,GAAkB;QAAlBT,EAAA,CAAAU,UAAA,cAAAmD,GAAA,CAAAhD,IAAA,CAAkB;QAYlBb,EAAA,CAAAS,SAAA,GAAmC;QAAnCT,EAAA,CAAAU,UAAA,UAAAM,OAAA,GAAA6C,GAAA,CAAAhD,IAAA,CAAAC,GAAA,+BAAAE,OAAA,CAAAoD,OAAA,CAAmC;QAenCpE,EAAA,CAAAS,SAAA,GAAgC;QAAhCT,EAAA,CAAAU,UAAA,UAAA2D,OAAA,GAAAR,GAAA,CAAAhD,IAAA,CAAAC,GAAA,4BAAAuD,OAAA,CAAAD,OAAA,CAAgC;QAsC5BpE,EAAA,CAAAS,SAAA,IAA2C;QAA3CT,EAAA,CAAAU,UAAA,SAAAmD,GAAA,CAAAvC,SAAA,mBAAAgD,OAAA,GAAAT,GAAA,CAAAvC,SAAA,CAAAR,GAAA,iCAAAwD,OAAA,CAAAF,OAAA,CAA2C;QAW9DpE,EAAA,CAAAS,SAAA,GAA2D;QAA3DT,EAAA,CAAAuE,UAAA,CAAAvE,EAAA,CAAAwE,eAAA,IAAAC,GAAA,EAAAZ,GAAA,CAAAhD,IAAA,CAAA0B,OAAA,oBAA2D;QAD3DvC,EAAA,CAAAU,UAAA,aAAAmD,GAAA,CAAAhD,IAAA,CAAA0B,OAAA,CAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}