{"ast":null,"code":"import { HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { catchError } from \"rxjs\";\nimport { environment } from \"src/environments/environment.development\";\nimport * as i0 from \"@angular/core\";\nconst {\n  apiUrl\n} = environment;\nclass AppInterceptor {\n  constructor() {\n    this.API = '/api';\n  }\n  intercept(req, next) {\n    if (req.url.startsWith(this.API)) {\n      req = req.clone({\n        url: req.url.replace(this.API, apiUrl),\n        withCredentials: true\n      });\n    }\n    return next.handle(req).pipe(catchError);\n  }\n  static #_ = this.ɵfac = function AppInterceptor_Factory(t) {\n    return new (t || AppInterceptor)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AppInterceptor,\n    factory: AppInterceptor.ɵfac\n  });\n}\nexport const AppInterceptorProvider = {\n  useClass: AppInterceptor,\n  multi: true,\n  provide: HTTP_INTERCEPTORS\n};","map":{"version":3,"names":["HTTP_INTERCEPTORS","catchError","environment","apiUrl","AppInterceptor","constructor","API","intercept","req","next","url","startsWith","clone","replace","withCredentials","handle","pipe","_","_2","factory","ɵfac","AppInterceptorProvider","useClass","multi","provide"],"sources":["D:\\Angular-Feb-2024-Workshop\\10.WorkshopPipesInterceptorsSubjects\\workshop-interceptors\\src\\app\\app.interceptor.ts"],"sourcesContent":["import { HTTP_INTERCEPTORS, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable, Provider } from \"@angular/core\";\r\nimport { Observable, catchError } from \"rxjs\";\r\nimport { environment } from \"src/environments/environment.development\";\r\n\r\nconst {apiUrl} = environment;\r\n\r\n@Injectable()\r\nclass AppInterceptor implements HttpInterceptor {\r\n\r\n    API = '/api';\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        \r\n        if (req.url.startsWith(this.API)) {\r\n            req = req.clone({\r\n                url: req.url.replace(this.API, apiUrl),\r\n                withCredentials: true,\r\n            })\r\n        }\r\n\r\n\r\n        return next.handle(req).pipe(\r\n            catchError\r\n        );\r\n    }\r\n}\r\n\r\nexport const AppInterceptorProvider: Provider = {\r\n    useClass: AppInterceptor,\r\n    multi: true,\r\n    provide: HTTP_INTERCEPTORS,\r\n}"],"mappings":"AAAA,SAASA,iBAAiB,QAA8D,sBAAsB;AAE9G,SAAqBC,UAAU,QAAQ,MAAM;AAC7C,SAASC,WAAW,QAAQ,0CAA0C;;AAEtE,MAAM;EAACC;AAAM,CAAC,GAAGD,WAAW;AAE5B,MACME,cAAc;EADpBC,YAAA;IAGI,KAAAC,GAAG,GAAG,MAAM;;EAEZC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAE9C,IAAID,GAAG,CAACE,GAAG,CAACC,UAAU,CAAC,IAAI,CAACL,GAAG,CAAC,EAAE;MAC9BE,GAAG,GAAGA,GAAG,CAACI,KAAK,CAAC;QACZF,GAAG,EAAEF,GAAG,CAACE,GAAG,CAACG,OAAO,CAAC,IAAI,CAACP,GAAG,EAAEH,MAAM,CAAC;QACtCW,eAAe,EAAE;OACpB,CAAC;;IAIN,OAAOL,IAAI,CAACM,MAAM,CAACP,GAAG,CAAC,CAACQ,IAAI,CACxBf,UAAU,CACb;EACL;EAAC,QAAAgB,CAAA,G;qBAjBCb,cAAc;EAAA;EAAA,QAAAc,EAAA,G;WAAdd,cAAc;IAAAe,OAAA,EAAdf,cAAc,CAAAgB;EAAA;;AAoBpB,OAAO,MAAMC,sBAAsB,GAAa;EAC5CC,QAAQ,EAAElB,cAAc;EACxBmB,KAAK,EAAE,IAAI;EACXC,OAAO,EAAExB;CACZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}