{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ErrorService {\n  constructor() {\n    this.apiErrror$$ = new BehaviorSubject(null);\n    this.apiError$ = this.apiErrror$$.asObservable();\n  }\n  setError(error) {\n    console.log(error);\n    this.apiErrror$$.next(error);\n  }\n  static #_ = this.ɵfac = function ErrorService_Factory(t) {\n    return new (t || ErrorService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ErrorService,\n    factory: ErrorService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","ErrorService","constructor","apiErrror$$","apiError$","asObservable","setError","error","console","log","next","_","_2","factory","ɵfac","providedIn"],"sources":["D:\\Angular-Feb-2024-Workshop\\10.WorkshopPipesInterceptorsSubjects\\workshop-interceptors\\src\\app\\core\\error\\error.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorService {\n  private apiErrror$$ = new BehaviorSubject(null);\n  public apiError$ = this.apiErrror$$.asObservable();\n\n  constructor() { }\n\n  setError(error: any): void {\n    console.log(error);\n    \n    this.apiErrror$$.next(error);\n  }\n}\n"],"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,YAAY;EAIvBC,YAAA;IAHQ,KAAAC,WAAW,GAAG,IAAIH,eAAe,CAAC,IAAI,CAAC;IACxC,KAAAI,SAAS,GAAG,IAAI,CAACD,WAAW,CAACE,YAAY,EAAE;EAElC;EAEhBC,QAAQA,CAACC,KAAU;IACjBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAElB,IAAI,CAACJ,WAAW,CAACO,IAAI,CAACH,KAAK,CAAC;EAC9B;EAAC,QAAAI,CAAA,G;qBAVUV,YAAY;EAAA;EAAA,QAAAW,EAAA,G;WAAZX,YAAY;IAAAY,OAAA,EAAZZ,YAAY,CAAAa,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}