{"ast":null,"code":"import { HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nclass AppInterceptor {\n  intercept(req, next) {\n    return next.handle(req);\n  }\n  static #_ = this.ɵfac = function AppInterceptor_Factory(t) {\n    return new (t || AppInterceptor)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AppInterceptor,\n    factory: AppInterceptor.ɵfac\n  });\n}\nexport const AppInterceptorProvider = {\n  useClass: AppInterceptor,\n  multi: true,\n  provide: HTTP_INTERCEPTORS\n};","map":{"version":3,"names":["HTTP_INTERCEPTORS","AppInterceptor","intercept","req","next","handle","_","_2","factory","ɵfac","AppInterceptorProvider","useClass","multi","provide"],"sources":["D:\\Angular-Feb-2024-Workshop\\10.WorkshopPipesInterceptorsSubjects\\workshop-interceptors\\src\\app\\app.interceptor.ts"],"sourcesContent":["import { HTTP_INTERCEPTORS, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable, Provider } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable()\r\nclass AppInterceptor implements HttpInterceptor {\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(req);\r\n    }\r\n}\r\n\r\nexport const AppInterceptorProvider: Provider = {\r\n    useClass: AppInterceptor,\r\n    multi: true,\r\n    provide: HTTP_INTERCEPTORS,\r\n}"],"mappings":"AAAA,SAASA,iBAAiB,QAA8D,sBAAsB;;AAI9G,MACMC,cAAc;EAEhBC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAC9C,OAAOA,IAAI,CAACC,MAAM,CAACF,GAAG,CAAC;EAC3B;EAAC,QAAAG,CAAA,G;qBAJCL,cAAc;EAAA;EAAA,QAAAM,EAAA,G;WAAdN,cAAc;IAAAO,OAAA,EAAdP,cAAc,CAAAQ;EAAA;;AAOpB,OAAO,MAAMC,sBAAsB,GAAa;EAC5CC,QAAQ,EAAEV,cAAc;EACxBW,KAAK,EAAE,IAAI;EACXC,OAAO,EAAEb;CACZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}