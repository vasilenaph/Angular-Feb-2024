{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { EMAIL_DOMAINS } from 'src/app/constants';\nimport { emailValidator } from 'src/app/shared/utils/email-validator';\nimport { matchPasswordsValidator } from 'src/app/shared/utils/match-passwords-validator';\nexport let RegisterComponent = class RegisterComponent {\n  get PassGroup() {\n    return this.form.get('passGroup');\n  }\n  constructor(fb, userService, proiv) {\n    this.fb = fb;\n    this.userService = userService;\n    this.form = this.fb.group({\n      username: ['', [Validators.required, Validators.minLength(5)]],\n      email: ['', [Validators.required, emailValidator(EMAIL_DOMAINS)]],\n      tel: ['123123'],\n      passGroup: this.fb.group({\n        password: ['', [Validators.required]],\n        rePassword: ['', [Validators.required]]\n      }, {\n        validators: [matchPasswordsValidator('password', 'rePassword')]\n      })\n    });\n  }\n  register() {\n    if (this.form.invalid) {\n      return;\n    }\n    const {\n      username,\n      email,\n      tel,\n      passGroup: {\n        password,\n        rePassword\n      } = {}\n    } = this.form.value;\n    this.userService.register(username, email, tel, password, rePassword).subscribe(() => {});\n    console.log(this.form.value);\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})], RegisterComponent);","map":{"version":3,"names":["Component","Validators","EMAIL_DOMAINS","emailValidator","matchPasswordsValidator","RegisterComponent","PassGroup","form","get","constructor","fb","userService","proiv","group","username","required","minLength","email","tel","passGroup","password","rePassword","validators","register","invalid","value","subscribe","console","log","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Angular-Feb-2024-Workshop\\10.WorkshopPipesInterceptorsSubjects\\workshop-interceptors\\src\\app\\user\\register\\register.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { EMAIL_DOMAINS } from 'src/app/constants';\r\nimport { emailValidator } from 'src/app/shared/utils/email-validator';\r\nimport { matchPasswordsValidator } from 'src/app/shared/utils/match-passwords-validator';\r\nimport { UserService } from '../user.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent {\r\n\r\n  form = this.fb.group({\r\n    username: ['', [Validators.required, Validators.minLength(5)]],\r\n    email: ['', [Validators.required, emailValidator(EMAIL_DOMAINS)]],\r\n    tel: ['123123'],\r\n    passGroup: this.fb.group(\r\n      {\r\n        password: ['', [Validators.required]],\r\n        rePassword: ['', [Validators.required]],\r\n      },\r\n      {\r\n        validators: [matchPasswordsValidator('password', 'rePassword')],\r\n      }\r\n    ),\r\n  });\r\n\r\n  get PassGroup() {\r\n    return this.form.get('passGroup');\r\n  }\r\n\r\n  constructor(private fb: FormBuilder, private userService: UserService, proiv) { }\r\n\r\n  register(): void {\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    const { username, email, tel, passGroup: {password, rePassword} = {} } = this.form.value;\r\n\r\n    this.userService.register(username!, email!, tel!, password!, rePassword!).subscribe(() => {\r\n\r\n    });\r\n\r\n    console.log(this.form.value);\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAsBC,UAAU,QAAQ,gBAAgB;AACxD,SAASC,aAAa,QAAQ,mBAAmB;AACjD,SAASC,cAAc,QAAQ,sCAAsC;AACrE,SAASC,uBAAuB,QAAQ,gDAAgD;AAQjF,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAiB5B,IAAIC,SAASA,CAAA;IACX,OAAO,IAAI,CAACC,IAAI,CAACC,GAAG,CAAC,WAAW,CAAC;EACnC;EAEAC,YAAoBC,EAAe,EAAUC,WAAwB,EAAEC,KAAK;IAAxD,KAAAF,EAAE,GAAFA,EAAE;IAAuB,KAAAC,WAAW,GAAXA,WAAW;IAnBxD,KAAAJ,IAAI,GAAG,IAAI,CAACG,EAAE,CAACG,KAAK,CAAC;MACnBC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACb,UAAU,CAACc,QAAQ,EAAEd,UAAU,CAACe,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9DC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAChB,UAAU,CAACc,QAAQ,EAAEZ,cAAc,CAACD,aAAa,CAAC,CAAC,CAAC;MACjEgB,GAAG,EAAE,CAAC,QAAQ,CAAC;MACfC,SAAS,EAAE,IAAI,CAACT,EAAE,CAACG,KAAK,CACtB;QACEO,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACnB,UAAU,CAACc,QAAQ,CAAC,CAAC;QACrCM,UAAU,EAAE,CAAC,EAAE,EAAE,CAACpB,UAAU,CAACc,QAAQ,CAAC;OACvC,EACD;QACEO,UAAU,EAAE,CAAClB,uBAAuB,CAAC,UAAU,EAAE,YAAY,CAAC;OAC/D;KAEJ,CAAC;EAM8E;EAEhFmB,QAAQA,CAAA;IACN,IAAI,IAAI,CAAChB,IAAI,CAACiB,OAAO,EAAE;MACrB;;IAGF,MAAM;MAAEV,QAAQ;MAAEG,KAAK;MAAEC,GAAG;MAAEC,SAAS,EAAE;QAACC,QAAQ;QAAEC;MAAU,CAAC,GAAG;IAAE,CAAE,GAAG,IAAI,CAACd,IAAI,CAACkB,KAAK;IAExF,IAAI,CAACd,WAAW,CAACY,QAAQ,CAACT,QAAS,EAAEG,KAAM,EAAEC,GAAI,EAAEE,QAAS,EAAEC,UAAW,CAAC,CAACK,SAAS,CAAC,MAAK,CAE1F,CAAC,CAAC;IAEFC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACrB,IAAI,CAACkB,KAAK,CAAC;EAC9B;CACD;AApCYpB,iBAAiB,GAAAwB,UAAA,EAL7B7B,SAAS,CAAC;EACT8B,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACW3B,iBAAiB,CAoC7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}