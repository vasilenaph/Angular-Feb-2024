{"ast":null,"code":"export function matchPasswordsValidator(passwordControlName, rePasswordControlName) {\n  return control => {\n    const passFirstControl = control.get(passwordControl);\n    const passSecondControl = control.get(rePasswordControl);\n    console.log({\n      passFirstControl,\n      passSecondControl\n    });\n    const areMatching = passFirstControl?.value == passSecondControl?.value;\n    return areMatching ? null : {\n      matchPasswordsValidator: true\n    };\n  };\n}","map":{"version":3,"names":["matchPasswordsValidator","passwordControlName","rePasswordControlName","control","passFirstControl","get","passwordControl","passSecondControl","rePasswordControl","console","log","areMatching","value"],"sources":["D:\\Angular-Feb-2024-Workshop\\08.WorkshopDirectivesAndForms\\workshop-modules\\src\\app\\shared\\utils\\match-passwords-validator.ts"],"sourcesContent":["import { ValidatorFn } from \"@angular/forms\";\r\n\r\n\r\nexport function matchPasswordsValidator(passwordControlName: string, rePasswordControlName: string): ValidatorFn {\r\n\r\n    return (control) => {\r\n\r\n        const passFirstControl = control.get(passwordControl);\r\n        const passSecondControl = control.get(rePasswordControl);\r\n\r\n        console.log({ passFirstControl, passSecondControl });\r\n        const areMatching = passFirstControl?.value == passSecondControl?.value;\r\n\r\n        return areMatching ? null : { matchPasswordsValidator: true };\r\n    };\r\n\r\n}"],"mappings":"AAGA,OAAM,SAAUA,uBAAuBA,CAACC,mBAA2B,EAAEC,qBAA6B;EAE9F,OAAQC,OAAO,IAAI;IAEf,MAAMC,gBAAgB,GAAGD,OAAO,CAACE,GAAG,CAACC,eAAe,CAAC;IACrD,MAAMC,iBAAiB,GAAGJ,OAAO,CAACE,GAAG,CAACG,iBAAiB,CAAC;IAExDC,OAAO,CAACC,GAAG,CAAC;MAAEN,gBAAgB;MAAEG;IAAiB,CAAE,CAAC;IACpD,MAAMI,WAAW,GAAGP,gBAAgB,EAAEQ,KAAK,IAAIL,iBAAiB,EAAEK,KAAK;IAEvE,OAAOD,WAAW,GAAG,IAAI,GAAG;MAAEX,uBAAuB,EAAE;IAAI,CAAE;EACjE,CAAC;AAEL"},"metadata":{},"sourceType":"module","externalDependencies":[]}