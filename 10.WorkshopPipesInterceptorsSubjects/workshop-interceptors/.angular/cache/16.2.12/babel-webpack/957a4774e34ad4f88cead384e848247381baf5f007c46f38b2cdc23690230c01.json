{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  get isLogged() {\n    return !!this.user;\n  }\n  constructor(http) {\n    this.http = http;\n    this.user$$ = new BehaviorSubject(undefined);\n    this.user$ = this.user$$;\n    this.USER_KEY = '[user]';\n  }\n  login(email, password) {\n    return this.http.post('/api/login', {\n      email,\n      password\n    });\n  }\n  register(username, email, tel, password, rePassword) {\n    return this.http.post('/api/register', {\n      username,\n      email,\n      tel,\n      password,\n      rePassword\n    });\n  }\n  logout() {\n    this.http.post('/api/logout', {});\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","UserService","isLogged","user","constructor","http","user$$","undefined","user$","USER_KEY","login","email","password","post","register","username","tel","rePassword","logout","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\Angular-Feb-2024-Workshop\\10.WorkshopPipesInterceptorsSubjects\\workshop-interceptors\\src\\app\\user\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { UserForAuth } from '../types/user';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  private user$$ = new BehaviorSubject<UserForAuth | undefined>(undefined);\r\n  private user$ = this.user$$\r\n\r\n  user: UserForAuth | undefined;\r\n  USER_KEY = '[user]';\r\n\r\n  get isLogged(): boolean {\r\n    return !!this.user;\r\n  }\r\n\r\n  constructor(private http: HttpClient) {\r\n\r\n  }\r\n  login(email: string, password: string) {\r\n    return this.http.post<UserForAuth>('/api/login', { email, password })\r\n  }\r\n\r\n  register(username: string, email: string, tel: string, password: string, rePassword: string) {\r\n    return this.http.post<UserForAuth>('/api/register', { username, email, tel, password, rePassword });\r\n  }\r\n\r\n  logout() {\r\n    this.http.post('/api/logout', {})\r\n  }\r\n} \r\n"],"mappings":"AAGA,SAASA,eAAe,QAAQ,MAAM;;;AAKtC,OAAM,MAAOC,WAAW;EAOtB,IAAIC,QAAQA,CAAA;IACV,OAAO,CAAC,CAAC,IAAI,CAACC,IAAI;EACpB;EAEAC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAVhB,KAAAC,MAAM,GAAG,IAAIN,eAAe,CAA0BO,SAAS,CAAC;IAChE,KAAAC,KAAK,GAAG,IAAI,CAACF,MAAM;IAG3B,KAAAG,QAAQ,GAAG,QAAQ;EAQnB;EACAC,KAAKA,CAACC,KAAa,EAAEC,QAAgB;IACnC,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAc,YAAY,EAAE;MAAEF,KAAK;MAAEC;IAAQ,CAAE,CAAC;EACvE;EAEAE,QAAQA,CAACC,QAAgB,EAAEJ,KAAa,EAAEK,GAAW,EAAEJ,QAAgB,EAAEK,UAAkB;IACzF,OAAO,IAAI,CAACZ,IAAI,CAACQ,IAAI,CAAc,eAAe,EAAE;MAAEE,QAAQ;MAAEJ,KAAK;MAAEK,GAAG;MAAEJ,QAAQ;MAAEK;IAAU,CAAE,CAAC;EACrG;EAEAC,MAAMA,CAAA;IACJ,IAAI,CAACb,IAAI,CAACQ,IAAI,CAAC,aAAa,EAAE,EAAE,CAAC;EACnC;EAAC,QAAAM,CAAA,G;qBAxBUlB,WAAW,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXvB,WAAW;IAAAwB,OAAA,EAAXxB,WAAW,CAAAyB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}