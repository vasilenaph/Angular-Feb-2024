{"ast":null,"code":"import { BehaviorSubject, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  get isLogged() {\n    return !!this.user;\n  }\n  constructor(http) {\n    this.http = http;\n    this.user$$ = new BehaviorSubject(undefined);\n    this.user$ = this.user$$.asObservable();\n    this.USER_KEY = '[user]';\n    this.userSubscription = this.user$.subscribe(user => {\n      this.user = user;\n    });\n  }\n  login(email, password) {\n    return this.http.post('/api/login', {\n      email,\n      password\n    }).pipe(tap(user => this.user$$.next(user)));\n  }\n  register(username, email, tel, password, rePassword) {\n    return this.http.post('/api/register', {\n      username,\n      email,\n      tel,\n      password,\n      rePassword\n    }).pipe(tap(user => this.user$$.next(user)));\n  }\n  logout() {\n    return this.http.post('/api/logout', {}).pipe(tap(() => this.user$$.next(undefined)));\n  }\n  ngOnDestroy() {\n    this.userSubscription.unsubscribe();\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","tap","UserService","isLogged","user","constructor","http","user$$","undefined","user$","asObservable","USER_KEY","userSubscription","subscribe","login","email","password","post","pipe","next","register","username","tel","rePassword","logout","ngOnDestroy","unsubscribe","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\Angular-Feb-2024-Workshop\\10.WorkshopPipesInterceptorsSubjects\\workshop-interceptors\\src\\app\\user\\user.service.ts"],"sourcesContent":["import { Injectable, OnDestroy } from '@angular/core';\r\nimport { UserForAuth } from '../types/user';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Subscription, tap } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService implements OnDestroy {\r\n  private user$$ = new BehaviorSubject<UserForAuth | undefined>(undefined);\r\n  private user$ = this.user$$.asObservable()\r\n\r\n  user: UserForAuth | undefined;\r\n  USER_KEY = '[user]';\r\n\r\n  userSubscription: Subscription;\r\n\r\n  get isLogged(): boolean {\r\n    return !!this.user;\r\n  }\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.userSubscription = this.user$.subscribe(user => {\r\n      this.user = user;\r\n    })\r\n  }\r\n\r\n  login(email: string, password: string) {\r\n    return this.http\r\n    .post<UserForAuth>('/api/login', { email, password })\r\n    .pipe(tap(user => this.user$$.next(user)));\r\n  }\r\n\r\n  register(username: string, email: string, tel: string, password: string, rePassword: string) {\r\n    return this.http\r\n    .post<UserForAuth>('/api/register', { username, email, tel, password, rePassword })\r\n    .pipe(tap(user => this.user$$.next(user)));\r\n  }\r\n\r\n  logout() {\r\n    return this.http\r\n    .post('/api/logout', {})\r\n    .pipe(tap(() => this.user$$.next(undefined)));\r\n  }\r\n\r\n  getProfile()\r\n\r\n  ngOnDestroy(): void {\r\n    this.userSubscription.unsubscribe()\r\n  }\r\n} \r\n"],"mappings":"AAGA,SAASA,eAAe,EAAgBC,GAAG,QAAQ,MAAM;;;AAKzD,OAAM,MAAOC,WAAW;EAStB,IAAIC,QAAQA,CAAA;IACV,OAAO,CAAC,CAAC,IAAI,CAACC,IAAI;EACpB;EAEAC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAZhB,KAAAC,MAAM,GAAG,IAAIP,eAAe,CAA0BQ,SAAS,CAAC;IAChE,KAAAC,KAAK,GAAG,IAAI,CAACF,MAAM,CAACG,YAAY,EAAE;IAG1C,KAAAC,QAAQ,GAAG,QAAQ;IASjB,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACH,KAAK,CAACI,SAAS,CAACT,IAAI,IAAG;MAClD,IAAI,CAACA,IAAI,GAAGA,IAAI;IAClB,CAAC,CAAC;EACJ;EAEAU,KAAKA,CAACC,KAAa,EAAEC,QAAgB;IACnC,OAAO,IAAI,CAACV,IAAI,CACfW,IAAI,CAAc,YAAY,EAAE;MAAEF,KAAK;MAAEC;IAAQ,CAAE,CAAC,CACpDE,IAAI,CAACjB,GAAG,CAACG,IAAI,IAAI,IAAI,CAACG,MAAM,CAACY,IAAI,CAACf,IAAI,CAAC,CAAC,CAAC;EAC5C;EAEAgB,QAAQA,CAACC,QAAgB,EAAEN,KAAa,EAAEO,GAAW,EAAEN,QAAgB,EAAEO,UAAkB;IACzF,OAAO,IAAI,CAACjB,IAAI,CACfW,IAAI,CAAc,eAAe,EAAE;MAAEI,QAAQ;MAAEN,KAAK;MAAEO,GAAG;MAAEN,QAAQ;MAAEO;IAAU,CAAE,CAAC,CAClFL,IAAI,CAACjB,GAAG,CAACG,IAAI,IAAI,IAAI,CAACG,MAAM,CAACY,IAAI,CAACf,IAAI,CAAC,CAAC,CAAC;EAC5C;EAEAoB,MAAMA,CAAA;IACJ,OAAO,IAAI,CAAClB,IAAI,CACfW,IAAI,CAAC,aAAa,EAAE,EAAE,CAAC,CACvBC,IAAI,CAACjB,GAAG,CAAC,MAAM,IAAI,CAACM,MAAM,CAACY,IAAI,CAACX,SAAS,CAAC,CAAC,CAAC;EAC/C;EAIAiB,WAAWA,CAAA;IACT,IAAI,CAACb,gBAAgB,CAACc,WAAW,EAAE;EACrC;EAAC,QAAAC,CAAA,G;qBAzCUzB,WAAW,EAAA0B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAX9B,WAAW;IAAA+B,OAAA,EAAX/B,WAAW,CAAAgC,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}